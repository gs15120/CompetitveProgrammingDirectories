/*
https://codeforces.com/blog/entry/43392
*/
#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y;

    bool operator<(const P &a)const{
        if(x!=a.x)
              return x>a.x;
        return y>a.y;
    }

};

vector<int> v[1];

//bitset<4001000> b;
int i,n,d,m,k,a,b,c,h;

int o[1111135];
int l[31];
int j[1];
int e;


//int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=998244353,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[23][1111115];
stack<int> s;
//set<int> s[222][22];
//priority_queue<P> q;
queue<int> q;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p;
/*
struct custom_hash {
    static uint64_t splitmix64(uint64_t x) {
        // http://xorshift.di.unimi.it/splitmix64.c
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }

    size_t operator()(uint64_t x) const {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};
unordered_map<long long, int, custom_hash> safe_map;
*/
//list<int> l;

//string r;
char r;
//deque<int> de;
//srand((int)time(NULL));
/*bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y<b.y;
}*/



bool as(P a,P b)
{
    if(a.x!=b.x)
        return a.x<b.x;
    return a.y<b.y;
}

P f(int n,int m)
{
    int i=1,r=0;
    for(;n+i-1<=m;r++,i*=2);
    i/=2,r--;
    return {max(u[r][n].x,u[r][m-i+1].x),min(u[r][n].y,u[r][m-i+1].y)};
}

int main()
{
    scanf("%d %d",&a,&b);
    for(int t=1;t<=a;u[0][t].x*=100,t++)
        scanf("%d",&u[0][t].x);
    for(int t=1;t<=a;t++)
        scanf("%d",&u[0][t].y);
    for(int t=1;t<=22;t++)
    for(int w=1;w+(1<<t)-1<=a;w++)
    {
        u[t][w]={max(u[t-1][w].x,u[t-1][w+(1<<(t-1))].x),min(u[t-1][w].y,u[t-1][w+(1<<(t-1))].y)};
    }
    //puts("@");
    for(int t=1;t<=a;t++)
    {
        n=t,m=a;
        for(;n+1<m;)
        {
            int h=(n+m)/2;
            P d=f(t,h);
            if(d.x>d.y) m=h;
            else n=h;
        }
        o[t]=max(min(f(t,n).x,f(t,n).y),min(f(t,m).x,f(t,m).y));
    }
    sort(o+1,o+a+1);
    double x=(double)b/a,k=0;
    for(int t=1;t<=a;t++)
    {
        //printf("%lf\n",x);
        if(x==0) break;
        k+=x*o[t];
        x*=(a-t+1-b);
        x/=(a-t);

    }
    printf("%lf",k);
}


