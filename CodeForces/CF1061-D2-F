/*
https://codeforces.com/blog/entry/63384
*/
#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y;

    bool operator<(const P &a)const{
        if(x!=a.x)
              return x>a.x;
        return y>a.y;
    }

};

vector<int> v;

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;


int o[111];
int l[111];
int j[1];
int e;


//int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=1000000007,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[1];
stack<int> s;
//set<int> s[222][22];
//priority_queue<int> q1;
queue<int> q;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p,p1;
/*
struct custom_hash {
    static uint64_t splitmix64(uint64_t x) {
        // http://xorshift.di.unimi.it/splitmix64.c
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }

    size_t operator()(uint64_t x) const {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};
unordered_map<long long, int, custom_hash> safe_map;
*/
//list<int> l;

//string r;
char r[33];
//deque<int> de;
//srand((int)time(NULL));
/*bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y<b.y;
}*/

bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y>b.y;
}

int f(int a,int b,int c)
{
    printf("? %d %d %d\n",a,b,c);
    fflush(stdout);
    scanf("%s",r);
    if(r[0]=='N') return 0;
    return 1;
}

int main()
{
    srand((int)time(NULL));
    scanf("%d %d",&a,&b);
    i=0;
    for(int p=1;p<a;p*=b,i++);
    //printf("%d",i);
    n=a;
    for(;;)
    {
        k=0;
        c=rand()%(a-1)+1;
        for(int i=1;i<a;i++)
        if(i!=c) k+=f(n,c,i);
        if(k==0) break;
    }
    for(;;)
    {
        k=0;
        d=rand()%(a)+1;
        for(int i=1;i<=a;i++)
        if(c!=i&&d!=i&&c!=d)
        {
            if(f(c,i,d))
            {
                q.push(i);
                k++;
            }
        }
        if(k==i*2-3) break;
        for(;q.size();q.pop());
    }
    for(;q.size();v.push_back(q.front()),q.pop());
    for(int h=0;h<v.size();h++)
    {
        k=0;
        for(int i=0;i<v.size();i++)
        if(i!=h) k+=f(c,v[i],v[h]);
        if(k==v.size()/2)
        {
            printf("! %d\n",v[h]);
            fflush(stdout);
            return 0;
        }
    }

}
