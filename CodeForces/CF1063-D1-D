/*
https://codeforces.com/blog/entry/62455
*/

#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

   /* bool operator<(const P &a)const{
              return z>a.z;
    }*/

};

vector<int> v[1];

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;
int x1,y11;
int o[2222];
int l[1];
int j[1];
int e;


int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

//int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=998244353,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[2221][2222];
stack<int> s;
//set<int> s[222][22];
queue<P> q;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<long long,int> p;
//list<int> l;

//string r,r1;
char r[2111];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.z<b.z;
}

int main()
{
    long long a,b,c,d;
    scanf("%lld %lld %lld %lld",&a,&b,&c,&d);
    b--;
    c--;
    b=(c-b+a)%a+1;
    x=-1;

    //printf("%lld\n",b);
    if(a<=5000)
    {

        //if((d-b)/a*a==d-b)
        for(long long t=0;t<=a-b;t++)
        {
            //printf("#####%lld %lld %lld\n",d-b,a+t,(d-b)%(a+t));
            if((d-b)%(a+t)==0)
                if(d-b>=0)
                x=max(x,t);//,puts("#");
            for(int w=1;w<=b;w++)
            {
                if(d-b-w>=0&&(d-b-w)/(a+t+w)*(a+t+w)==d-b-w)
                    x=max(x,t+w);
                if(d-b-w+1>=0&&(d-b-w+1)/(a+t+w)*(a+t+w)==d-w-b+1)
                    x=max(x,t+w);
            }
        }
        //if(x)
            printf("%lld",x);
       // else puts("-1");
        //printf("%lld %lld %lld",x,d-b,a*2-b);
        return 0;
    }

    if(d>=b&&d<=b*2)
    {
        x=(a-b)+min(d-b+1,b);
    }
    if(d>=b)
    for(long long t=max((d-2*b)/(2*a),(long long)1);t<=(d-b)/a;t++)
    {
        //printf("##%lld\n",t);
        //puts("#");
        long long k=d-t*a;
        long long n,m;
        n=(k-b)/t;
        m=(k-b)%t;
        //printf("@@%lld %lld %lld\n",n,m,t);
        if(m<=b&&m<=n&&n-m<=(a-b))
        {
            if((m+b)*(t+1)+(n-m+a-b)*(t)==d)
            x=max(x,n);

        }
        else if(m<=b&&n-m>a-b)
        {

            long long h=(n-m-a+b+t)/(t+1)*(t+1);
            //printf("@@%lld %lld %lld\n",n,m,h);
            if(m+h/(t+1)*t<=b)
                if((m+b+h/(t+1)*t)*(t+1)+(a-b+(n-m-h))*t==d)
                x=max(x,h/(t+1)*t-h+n);
        }


        long long k1=d-t*(a+1);
        n=(k1-b)/t;
        m=(k1-b)%t;
        if(m<b&&m<=n&&n-m<=(a-b))
        {
            if((m+b)*(t+1)+(n-m+a-b)*(t)==d-t)
            x=max(x,n+1);

        }
        else if(m<b&&n-m>a-b)
        {
            long long h=(n-m-a+b+t)/(t+1)*(t+1);
            if(m+h/(t+1)*t<=b)
                if((m+b+h/(t+1)*t)*(t+1)+(a-b+(n-m-h))*t==d-t)
                x=max(x,h/(t+1)*t-h+n+1);
        }
    }







//if(x)
printf("%lld",x);
  //  else puts("-1");
}
