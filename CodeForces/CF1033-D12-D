/*
http://codeforces.com/blog/entry/62287
*/
#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    long long x,y,z;

    bool operator<(const P &a)const{
              return z>a.z;
    }

};

vector<P> v;
vector<long long> v1;

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;

int o[111111];
int l[111111];
int j[111111];
int e;

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=998244353,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[11];
stack<int> s;
//set<int> s[222][22];
queue<int> q,q1;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<long long,int> p;
//list<int> l;

//string r;
char r[111111];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.z<b.z;
}


long long f(long long a,long long b)
{
    for(;b;)
    {
        long long h=a;
        a=b;
        b=h%b;
    }
    return a;
}

long long g(long long x)
{
    long long n=1,m=x;
    for(;n<m;)
    {
        long long h=(n+m)/2+1;
        if(x/h/h/h<1) m=h-1;
        else n=h;
    }
    if(x/n/n/n==1&&n*n*n==x)
    return n;
    return 0;
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
    {
        scanf("%lld",&x);
        z=sqrt(x);
        if(z*z==x)
        {
            //puts("&");
            y=sqrt(z);
            if(y*y==z)
            {

                p[y]+=4;
                if(p[y]==4)v1.push_back(y);
            }
            else
            {
                p[z]+=2;
                if(p[z]==2) v1.push_back(z);
            }

        }
        else
        {
            z=g(x);
            //printf("%lld",z);
            if(z)
            {
                p[z]+=3;
                if(p[z]==3) v1.push_back(z);
            }
            else v.push_back({x,x});
        }

    }
    for(int t=0;t<v1.size();t++)
    {
        for(int w=0;w<v.size();w++)
        {
            if(f(v[w].x,v1[t])==v1[t])
                v[w].x/=v1[t],p[v1[t]]++;
        }
    }
    p[1]=1;
    x=1;
    for(int t=0;t<v.size();t++)
    if(v[t].x!=v[t].y&&v[t].x>1)
    {
        i=2;
        for(int w=t+1;w<v.size();w++)
        {
            if(v[w].x%v[t].x==0) i++,v[w].x/=v[t].x;
        }
        x*=i;
        x%=mod;
        //printf("&%lld\n",x);
    }
    else if(v[t].x>1)
    {
        long long n=0,m=0,k=2,i=2;
        for(int w=t+1;w<v.size();w++)
        {
            if(v[w].x==v[t].x)
            {
             v[w].x=1;
             k++,i++;
             //puts("**");
            }
            else
            {
                if(f(v[w].x,v[t].x)>1)
                {

                    if(n==0||n==f(v[w].x,v[t].x)) n=f(v[w].x,v[t].x),k++;
                else i++;
                v[w].x/=f(v[w].x,v[t].x);
                }
            }
            //printf("&&%lld %lld %lld %lld\n",x,n,k,i);
        }
        x*=(k);
        x%=mod;
        x*=(i);
        x%=mod;

    }
    //x=1;
    for(int t=0;t<v1.size();t++)
    {
    x*=(p[v1[t]]+1),x%=mod;

    //printf("\n%lld %d",x,v1[t]);
    }
    printf("%lld\n",x);
    fflush(stdout);
}
