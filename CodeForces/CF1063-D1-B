/*
https://codeforces.com/blog/entry/62455
*/

#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

   /* bool operator<(const P &a)const{
              return z>a.z;
    }*/

};

vector<int> v[1];

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;

int o[2222][2222];
int l[1];
int j[1];
int e;


int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

//int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=998244353,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[2221][2222];
stack<int> s;
//set<int> s[222][22];
queue<P> q;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<long long,int> p;
//list<int> l;

//string r,r1;
char r[2111][2222];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.z<b.z;
}


int main()
{
    scanf("%d %d %d %d %d %d",&a,&b,&c,&d,&n,&m);
    for(int t=1;t<=a;t++)
    {
        scanf("%s",r[t]+1);
        for(int w=1;w<=b;w++)
        u[t][w]={1000654321,1000654321};
    }
    u[c][d]={0,0};
    q.push({c,d});
    for(;q.size();q.pop())
    {
        P z=q.front();
        z.x++;
        if(r[z.x][z.y]=='.'&&u[z.x][z.y].x+u[z.x][z.y].y>u[q.front().x][q.front().y].x+u[q.front().x][q.front().y].y)
        {
            u[z.x][z.y].x=u[q.front().x][q.front().y].x;
            u[z.x][z.y].y=u[q.front().x][q.front().y].y;
            q.push({z.x,z.y});
        }
        z.x-=2;
        if(r[z.x][z.y]=='.'&&u[z.x][z.y].x+u[z.x][z.y].y>u[q.front().x][q.front().y].x+u[q.front().x][q.front().y].y)
        {
            u[z.x][z.y].x=u[q.front().x][q.front().y].x;
            u[z.x][z.y].y=u[q.front().x][q.front().y].y;
            q.push({z.x,z.y});
        }
        z.x++;
        z.y--;
        if(r[z.x][z.y]=='.'&&u[z.x][z.y].x+u[z.x][z.y].y>1+u[q.front().x][q.front().y].x+u[q.front().x][q.front().y].y)
        {
            u[z.x][z.y].x=1+u[q.front().x][q.front().y].x;
            u[z.x][z.y].y=u[q.front().x][q.front().y].y;
            q.push({z.x,z.y});
        }
        z.y+=2;
        if(r[z.x][z.y]=='.'&&u[z.x][z.y].x+u[z.x][z.y].y>1+u[q.front().x][q.front().y].x+u[q.front().x][q.front().y].y)
        {
            u[z.x][z.y].x=u[q.front().x][q.front().y].x;
            u[z.x][z.y].y=u[q.front().x][q.front().y].y+1;
            q.push({z.x,z.y});
        }
    }
    for(int t=1;t<=a;t++)
        for(int w=1;w<=b;w++)
        if(u[t][w].x<=n&&u[t][w].y<=m) k++,r[t][w]='+';
    //for(int t=1;t<=a;puts(""),t++)
    //for(int w=1;w<=b;w++)
        //printf("%c",r[t][w]);
        printf("%d",k);
}
