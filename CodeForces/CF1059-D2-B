/*
We can fill a 3Ã—3 square without its central cell only if they r all #
If we can fill it all, it's possible.
If not, impossible.
*/
 #include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

    bool operator<(const P &a)const{
              return z>a.z;
    }

};

vector<int> v;

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;

int o[1111][1111];
int l[2];
int j[1];
int e;

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long x,mod=1000000007,mod2=1000000009,mod3=2017;
long long z,y;
double pi=3.14159265;
P u[1];
stack<int> s;
//set<int> s[222][22];
queue<int> q,q1;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p;
//list<int> l;

//string r;
char r[1222][1111];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.z<b.z;
}

int main()
{
    scanf("%d %d",&a,&b);
    for(int t=1;t<=a;t++)
        scanf("%s",r[t]+1);
    for(int t=2;t<a;t++)
        for(int w=2;w<b;w++)
    {
        for(int h=0;h<8;h++)
            if(r[t+dx[h]][w+dy[h]]!='#') goto qwe;
        for(int h=0;h<8;h++)
            o[t+dx[h]][w+dy[h]]=1;
        qwe:;
    }
    for(int t=1;t<=a;t++)
        for(int w=1;w<=b;w++)
    {
        if(o[t][w]==0&&r[t][w]=='#')
        {
            puts("NO");
            return 0;
        }
    }
    puts("YES");
}
