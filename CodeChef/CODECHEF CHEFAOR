/*
A simple knuth op code.
I have no idea to explane more.
*/
#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

    bool operator<(const P &a)const{
              return z>a.z;
    }

};

vector<int> v[3333];

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;


int o[5311];
long long l[5500][5313];
int j[5300][5333];
int e[5555][5555];


int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

//int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=998244353,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
//P u[222221];
stack<int> s;
//set<int> s[222][22];
//priority_queue<int> q;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p;
//list<int> l;

//string r1,r2;
//char r[333][333];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.x<b.x;
}

int main()
{
    int ui=0;
    scanf("%d",&ui);
    for(;ui;ui--)
    {
        scanf("%d %d",&a,&b);
        memset(l,0,sizeof(l));
        memset(e,0,sizeof(e));
        
        for(int t=1;t<=a;t++)
            scanf("%d",&o[t]);
        for(int i=1;i<=a;i++)
        {
            e[i-1][i]=o[i];
            for(int j=i+1;j<=a;j++)
                e[i-1][j]=(e[i-1][j-1]|o[j]);
        }
        for(int i=1;i<=a;i++)
        {
            l[i][i]=l[i-1][i-1]+e[i-1][i];
            j[i][i]=i;
            l[1][i]=e[0][i];
            j[1][i]=i;
        }
        for(int n=1;n<=a;n++)
            for(int m=2;n+m<=a;m++)
        {
            long long x=0;
            for(int h=j[m][n+m-1];h<=j[m+1][n+m];h++)
            {
                if(x<l[m-1][h-1]+e[h-1][n+m])
                {
                    j[m][n+m]=h;
                    x=l[m-1][h-1]+e[h-1][n+m];
                }
            }
            l[m][m+n]=x;
        }
        
        printf("%lld\n",l[b][a]);
    }
}


